- name: Install bind
  ansible.builtin.apt:
    name: 
      - bind9
    state: present

- name: Copy bind9 configuration
  ansible.builtin.template:
    src: bind.{{ item }}.j2
    dest: /etc/bind/named.conf.{{ item }}
  loop:
    - options
  notify: Restart bind9
  no_log: true

- name: Configure dns zone 
  ansible.builtin.template:
    src: db.{{ startup_name }}.j2
    dest: /var/cache/bind/db.{{ startup_name }}
    owner: bind
    group: bind
    force: no
  notify: Restart bind9
  when: inventory_hostname in groups['dns_primary']

- name: Configure dns reverse zone 
  ansible.builtin.template:
    src: db.reverse.zone.j2
    dest: /var/cache/bind/db.reverse.zone
    force: no
  notify: Restart bind9

- name: Extract bind_exporter-0.6.1 into /usr/local/bin/
  ansible.builtin.unarchive:
    src: https://github.com/prometheus-community/bind_exporter/releases/download/v0.6.1/bind_exporter-0.6.1.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /opt/bind_exporter-0.6.1.linux-amd64/bind_exporter
    dest: /usr/local/bin
    mode: '0755'
    remote_src: yes

- name: Configure bind9-exporter 
  ansible.builtin.template:
    src: prometheus-bind9-exporter.j2
    dest: /etc/systemd/system/prometheus-bind9-exporter.service
  notify: daemon-reload

- name: Ensure bind9 and exporter are enable and running
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - bind9
    - prometheus-bind9-exporter

- meta: flush_handlers

- name: Create records for backup
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_name }}"
    record: "backup"
    value: "{{ backup_ip }}"
  when: inventory_hostname in groups['dns_primary']

- name: Create CNAME for bind
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_name }}"
    record: "ns-{{ inventory_hostname.split('-')[1] }}"
    type: "CNAME"
    value: "{{ inventory_hostname }}"
