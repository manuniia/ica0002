- name: Create directories for grafana container
  file:
    name: "/opt/grafana/provisioning/{{ item }}"
    state: directory
  loop:
    - dashboards
    - datasources

- name: Pre-create grafana.ini file for grafana container
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  no_log: true
  notify: Restart grafana

- name: Copy grafana provisioning datasources
  ansible.builtin.template:
    src: sources.yaml.j2
    dest: /opt/grafana/provisioning/datasources/sources.yaml
  notify: Restart grafana

- name: Copy grafana provisioning dashboards
  ansible.builtin.template:
    src: boards.yaml.j2
    dest: /opt/grafana/provisioning/dashboards/sample.yaml 
  notify: Restart grafana

- name: Copy main.json to dashboards
  ansible.builtin.copy:
    src: "{{ item }}.json"
    dest: "/opt/grafana/provisioning/dashboards/{{ item }}.json"
  loop:
      - main
      - telegraf
      - agama-client
      - backups
      - mysql
  notify: Restart grafana

- name: Create a grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    published_ports: "{{ grafana_port }}:3000"
    state: started
    restart_policy: always
    volumes: /opt/grafana:/etc/grafana

- name: Create CNAME for grafana
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_name }}"
    record: "grafana"
    type: "CNAME"
    value: "{{ inventory_hostname }}"