#!/bin/bash -eu

# Ensures the script logs and exits on missing configuration entries
for t in database_url database_name subnet; do
    if ! grep -q "^${t}=" /etc/agama-client/agama-client.conf; then
        logger "$0: Failed to get $t from config"
        exit 1
    fi
done

# Check for the presence of fping and exit if not found
if ! command -v fping &> /dev/null; then
    logger "$0: fping not found"
    exit 1
fi

logger "Starting agama-client..."

# Extract configuration values directly without unnecessary command repetition
db_url=$(grep "^database_url=" /etc/agama-client/agama-client.conf | cut -d'=' -f2)
db_name=$(grep "^database_name=" /etc/agama-client/agama-client.conf | cut -d'=' -f2)
subnet=$(grep "^subnet=" /etc/agama-client/agama-client.conf | cut -d'=' -f2)

# Test connection to the database
if ! curl -s --fail "$db_url/ping" > /dev/null; then
    logger "$0: Failed to connect to $db_url"
    exit 1
fi

logger "$0: Creating database $db_name in $db_url"
if ! curl -i -X POST "$db_url/query" --data-urlencode "q=CREATE DATABASE $db_name" > /dev/null 2>&1; then
    logger "$0: Failed to create database"
    exit 1
fi

while true; do
    alive_hosts=$(fping -g $subnet -a 2> /dev/null || true)
    num_hosts=$(echo "$alive_hosts" | wc -l)
    logger "$0: Discovered $num_hosts IPs"
    
    for vm_ip in $alive_hosts; do
        content=$(curl --connect-timeout 1 -s -w "%{http_code}" --silent "$vm_ip")
        http_code=$(echo "$content" | tail -n1)

        if [ "$http_code" != "200" ]; then
            continue
        fi

        vm_name=$(echo "$content" | grep "running on" | awk '{print $5}')
        if [ -z "$vm_name" ]; then
            continue
        fi

        ptr=$(host -W1 $vm_ip | awk '/domain name pointer/ {print $5}')
        if [ -n "$ptr" ]; then
            vm_name="$ptr"
            logger "$0: Resolved $vm_ip to $ptr"
        fi

        table_rows=$(echo "$content" | grep -c "</tr>")
        curl -i -XPOST "${db_url}/write?db=$db_name" --data-binary "agama-stats,name=$vm_name items=$table_rows" > /dev/null 2>&1 || logger "$0: Failed to write to Influxdb"

        if echo "$content" | grep -q "$(hostname)"; then
            delete_urls=$(echo "$content" | grep "$(hostname)" | grep -o '/items/.*/delete')

            for delete_url in $delete_urls; do
                if ! curl -s "$vm_ip$delete_url" -o /dev/null; then
                    logger "$0: Failed to delete $(hostname) from $vm_ip"
                fi
            done
        fi

        post_data="Checked from $(hostname) at $(date)"
        if ! curl -s -XPOST "$vm_ip/items/add" -F "new_item=$post_data" -o /dev/null; then
            logger "$0: Failed to update Agama on $vm_ip"
        fi
        logger "$0: Posted check message to $vm_ip"
    done
    logger "$0: Waiting for the next cycle to start..."
    sleep 300
done
