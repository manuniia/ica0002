- name: check if already installed influxdb
  stat:
    path: /usr/bin/influxd
  register: influxdb_installed

- name: download influxdb
  ansible.builtin.get_url:
    url: https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb
    dest: /tmp/influxdb_1.8.10_amd64.deb
  when: not influxdb_installed.stat.exists

- name: add InfluxDB repository key
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdata-archive_compat.key

- name: Add InfluxDB APT repository
  apt_repository:
    repo: deb https://repos.influxdata.com/debian stable main

- name: install influxdb
  ansible.builtin.apt:
    deb: /tmp/influxdb_1.8.10_amd64.deb
    state: present
  when: not influxdb_installed.stat.exists

- name: Change influxdb conf file
  ansible.builtin.template:
    src: influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
  notify: Restart influxdb

- name: Create directory for influxdb-stats-exporter
  file:
    path: /usr/local/bin
    state: directory
    mode: '0755'

- name: Download InfluxDB Stats Exporter binary
  get_url:
    url: "https://github.com/carlpett/influxdb_stats_exporter/releases/download/v0.1.1/influx_stats_exporter_linux_amd64"
    dest: /usr/local/bin/influxdb_stats_exporter
    mode: '0755'
  register: influxdb_stats_exporter_download

- name: Create system file for influxdb exporter
  ansible.builtin.template:
    src: influxdb_stats_exporter.j2
    dest: /etc/systemd/system/prometheus-influxdb-stats-exporter.service
    mode: '0755'
  notify: Restart influxdb

- name: Ensure influxdb and exporter are enable and running
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - influxdb
    - prometheus-influxdb-stats-exporter

- name: install telegraf
  ansible.builtin.apt:
    name: telegraf
    state: present

- name: Create telegraf.conf
  ansible.builtin.template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf

- name: Ensure telegraf is enable and running
  systemd:
    name: telegraf
    enabled: yes
    state: started

- name: Create /home/backup/influxdb directory 
  file:
    path: /home/backup/influxdb
    state: directory
    owner: backup
    group: backup

- name: Create cron file for influxdb
  ansible.builtin.template:
    src: influxdb-backup
    dest: /etc/cron.d/influxdb-backup

- name: Create CNAME for influxdb
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_name }}"
    record: "influxdb"
    type: "CNAME"
    value: "{{ inventory_hostname }}"

- name: Create CNAME for telegraf
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_name }}"
    record: "telegraf"
    type: "CNAME"
    value: "{{ inventory_hostname }}"
