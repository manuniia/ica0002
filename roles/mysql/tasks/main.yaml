- name: create my.cnf file for prometheus
  ansible.builtin.template:
    src: my.cnf.prometheus.j2
    dest: /var/lib/prometheus/.my.cnf
    mode: '400'
    owner: prometheus
  no_log: yes
  notify: Restart prometheus-mysqld-exporter

- name: create my.cnf file for backup
  ansible.builtin.template:
    src: my.cnf.backup.j2
    dest: /home/backup/.my.cnf
    mode: '400'
    owner: backup
  no_log: yes

- name: Install mysql
  ansible.builtin.apt:
    name: 
      - mysql-server
      - python3-pymysql
      - prometheus-mysqld-exporter
    state: present

- name: Copy mysqld configuration
  ansible.builtin.template:
    src: mysqld.cnf
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
  notify: Restart mysql    

- name: Ensure MySQL and exporter are enable and running
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - mysql
    - prometheus-mysqld-exporter
    
- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: MySQL user
  community.mysql.mysql_user:
    column_case_sensitive: true
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: MySQL exporter user
  community.mysql.mysql_user:
    column_case_sensitive: true
    name: "{{ mysql_exporter_user }}"
    password: "{{ mysql_exporter_password }}"
    host: localhost
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  notify: Restart prometheus-mysqld-exporter

- name: Create /home/backup/mysql directory 
  file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    group: backup

- name: MySQL backup user
  community.mysql.mysql_user:
    column_case_sensitive: true
    name: "{{ mysql_backup_user }}"
    password: "{{ mysql_backup_password }}"
    host: localhost
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create cron file for mysql
  ansible.builtin.template:
    src: mysql-backup
    dest: /etc/cron.d/mysql-backup 

# - name: Update Prometheus MySQL exporter to export MySQL replication metrics
#   ansible.builtin.template:
#     src: prometheus-mysqld-exporter.j2
#     dest: /etc/default/prometheus-mysqld-exporter
#   notify: Restart mysql   

- name: MySQL replication user
  community.mysql.mysql_user:
    column_case_sensitive: true
    name: "{{ mysql_rep_user }}"
    password: "{{ mysql_rep_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Read only mode for replica server
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

